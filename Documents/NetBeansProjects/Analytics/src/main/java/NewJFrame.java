
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.function.Function;
import javax.imageio.ImageIO;
import javax.swing.BoxLayout;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author szymo
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        plotPanel = (NewJPanel) jPanel1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        function = new javax.swing.ButtonGroup();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        ChartColor = new javax.swing.JMenuItem();
        BackgroundColor = new javax.swing.JMenuItem();
        jPanel1 = new NewJPanel();
        jButton1 = new javax.swing.JButton();
        JRadioButtonFunctionOne = new javax.swing.JRadioButton();
        JRadioButtonFunctionTwo = new javax.swing.JRadioButton();
        jRadioButtonFunctionThree = new javax.swing.JRadioButton();
        jRadioButtonFunctionFour = new javax.swing.JRadioButton();
        jRadioButtonFunctionFive = new javax.swing.JRadioButton();
        A_Value = new javax.swing.JTextField();
        B_Value = new javax.swing.JTextField();
        C_Value = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Start_Chart = new javax.swing.JTextField();
        End_Chart = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        Help = new javax.swing.JButton();
        saveToFile = new javax.swing.JButton();

        ChartColor.setText("Zmień kolor Wykresu");
        ChartColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChartColorActionPerformed(evt);
            }
        });
        jPopupMenu2.add(ChartColor);

        BackgroundColor.setText("Zmień kolor tła");
        BackgroundColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackgroundColorActionPerformed(evt);
            }
        });
        jPopupMenu2.add(BackgroundColor);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setComponentPopupMenu(jPopupMenu2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 361, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 269, Short.MAX_VALUE)
        );

        jButton1.setText("Rysuj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        function.add(JRadioButtonFunctionOne);
        JRadioButtonFunctionOne.setText("Funkcja Liniowa");
        JRadioButtonFunctionOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioButtonFunctionOneActionPerformed(evt);
            }
        });

        function.add(JRadioButtonFunctionTwo);
        JRadioButtonFunctionTwo.setText("Funkcja Kwadratowa");
        JRadioButtonFunctionTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioButtonFunctionTwoActionPerformed(evt);
            }
        });

        function.add(jRadioButtonFunctionThree);
        jRadioButtonFunctionThree.setText("Funkcja Trygonometryczna");

        function.add(jRadioButtonFunctionFour);
        jRadioButtonFunctionFour.setText("Funkcja Logarytmiczna");

        function.add(jRadioButtonFunctionFive);
        jRadioButtonFunctionFive.setText("Funkcja Wykładnicza");

        B_Value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ValueActionPerformed(evt);
            }
        });

        jLabel1.setText("Wartiść A");

        jLabel2.setText("Wartość B");

        jLabel3.setText("Wartość C");

        Start_Chart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Start_ChartActionPerformed(evt);
            }
        });

        End_Chart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                End_ChartActionPerformed(evt);
            }
        });

        jLabel5.setText("Początek wykresu");

        jLabel6.setText("Koniec wykresu");

        clearButton.setText("Wyczyść");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        Help.setText("Pomoc");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });

        saveToFile.setText("Save to file");
        saveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRadioButtonFunctionFive, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addComponent(jRadioButtonFunctionFour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButtonFunctionThree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JRadioButtonFunctionTwo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JRadioButtonFunctionOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(A_Value)
                            .addComponent(B_Value)
                            .addComponent(C_Value)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Start_Chart)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(End_Chart)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(saveToFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JRadioButtonFunctionOne)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JRadioButtonFunctionTwo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonFunctionThree)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonFunctionFour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonFunctionFive)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Start_Chart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(End_Chart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(Help)
                    .addComponent(saveToFile))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getArrayOfValue() {
        Double[] ret = {};
        if(function.isSelected(JRadioButtonFunctionOne.getModel())){
            ret = liniowa(Integer.parseInt(A_Value.getText()), Integer.parseInt(B_Value.getText()), Integer.parseInt(C_Value.getText()), Integer.parseInt(Start_Chart.getText()), Integer.parseInt(End_Chart.getText()));
        } else if(function.isSelected(JRadioButtonFunctionTwo.getModel())) {
            ret = kwadratowa(Integer.parseInt(A_Value.getText()), Integer.parseInt(B_Value.getText()), Integer.parseInt(C_Value.getText()), Integer.parseInt(Start_Chart.getText()), Integer.parseInt(End_Chart.getText()));
        } else if(function.isSelected(jRadioButtonFunctionThree.getModel())) {
            ret = trygonometryczna(Integer.parseInt(A_Value.getText()), Integer.parseInt(B_Value.getText()), Integer.parseInt(C_Value.getText()), Integer.parseInt(Start_Chart.getText()), Integer.parseInt(End_Chart.getText()));
        } else if(function.isSelected(jRadioButtonFunctionFour.getModel())) {
            ret = logarytmiczna(Integer.parseInt(A_Value.getText()), Integer.parseInt(B_Value.getText()), Integer.parseInt(C_Value.getText()), Integer.parseInt(Start_Chart.getText()), Integer.parseInt(End_Chart.getText()));
        } else if(function.isSelected(jRadioButtonFunctionFive.getModel())) {
            ret = wykladnicza(Integer.parseInt(A_Value.getText()), Integer.parseInt(B_Value.getText()), Integer.parseInt(C_Value.getText()), Integer.parseInt(Start_Chart.getText()), Integer.parseInt(End_Chart.getText()));
        }
        System.out.println("min: " + min(ret));
        System.out.println("min: " + max(ret));
        if(min(ret) > 0){
            plotPanel.drawFunction(downAll(ret));
            plotPanel.drawYArrow(Integer.parseInt(Start_Chart.getText()), (Integer.parseInt(End_Chart.getText())));
            plotPanel.drawBottomArrow();
        } else if(max(ret) < 0){
            System.out.println("true");
            plotPanel.drawFunction(downAll(ret));
            plotPanel.drawYArrow(Integer.parseInt(Start_Chart.getText()), (Integer.parseInt(End_Chart.getText())));
            plotPanel.drawTopArrow();
        } else {
            plotPanel.drawFunction(ret);
            plotPanel.drawYArrow(Integer.parseInt(Start_Chart.getText()), (Integer.parseInt(End_Chart.getText())));
            plotPanel.drawArrow();
        }
    }
    
    public Double[] liniowa(int a, int b, int c, int xmin, int xmax) {
    int length = 361;
    double step = Double.parseDouble(String.valueOf(xmax - xmin)) / Double.parseDouble(String.valueOf(length - 1));
        System.out.println(step);
    double x = 0;
    Double[] yValues = new Double[length];
    for(int i = 0; i < length; i++){
        x += step;
        yValues[i] = a * x + b;
    }
    return rewrite(yValues);
}

    public Double[] kwadratowa(double a, double b, double c, double x_min, double x_max) {
            Double[] tab = new Double[361];
            double x = x_min;
            double dx = (x_max - x_min) / 360;
            for (int i = 0; i < 361; i++) {
                tab[i] = a * x * x + b * x + c;
                x += dx;
            }
            return rewrite(tab);
    }

    public Double[] trygonometryczna(double a, double b, double c, double x_min, double x_max) {
            Double[] tab = new Double[361];
            double x = x_min;
            double dx = (x_max - x_min) / 360;
            for (int i = 0; i < 361; i++) {
                tab[i] = a * Math.sin(b * x + c);
                x += dx;
            }
            return rewrite(tab);
    }

    public Double[] logarytmiczna(double a, double b, double c, double x_min, double x_max) {
            Double[] tab = new Double[361];
            double x = x_min;
            double dx = (x_max - x_min) / 360;
            for (int i = 0; i < 361; i++) {
                tab[i] = a * Math.log(b * x + c);
                x += dx;
            }
            return rewrite(tab);
    }

    public Double[] wykladnicza(double a, double b, double c, double x_min, double x_max) {
            Double[] tab = new Double[361];
            double x = x_min;
            double dx = (x_max - x_min) / 360;
            for (int i = 0; i < 361; i++) {
                tab[i] = a * Math.exp(b * x + c);
                x += dx;
            }
            return rewrite(tab);
    }

    
    public Double[] rewrite(Double[] arr){
        for(int i = 0; i < arr.length - 1; i++){
            
            if(!Double.isNaN(arr[i]))arr[i] = plotPanel.getImage().getHeight(this) - (arr[i] + 160.0);
            System.out.println("arr[i] - rewrite: " + arr[i]);
        }
        return scaleArray(arr);
    }
    
    public Double[] scaleArray(Double[] arr){
        Double[] scaledArray = new Double[arr.length];
        Double oldMin = min(arr);
        Double oldMax = max(arr);
        Double newMin = -269.0;
        Double newMax = 269.0;
        for(int i = 0; i < arr.length - 1; i++){
            scaledArray[i] = ((arr[i] - oldMin)/(oldMax - oldMin)) * (newMax - newMin) + newMin;
        }
        return scaledArray;
    }
    
    public Double min(Double[] tab) {
            Double min = tab[0];
            for (int i = 0; i < tab.length - 1; i++) {
                if (tab[i] < min && !Double.isNaN(tab[i])) {
                    min = tab[i];
                }
            }
            return min;
    }
    
    public Double max(Double[] tab) {
            Double max = tab[0];
            for (int i = 0; i < tab.length -1; i++) {
                if (tab[i] > max && !Double.isNaN(tab[i])) {
                    System.out.println("Max: " + tab[i]);
                    max = tab[i];
                }
            }
            return max;
    }
    
    public Double[] downAll(Double[] arr){
        for(int i = 0; i < arr.length - 1; i++){
            arr[i] = arr[i] - plotPanel.getImage().getHeight(this);
        }
        return arr;
    }

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        AValue = Double.parseDouble(A_Value.getText());
        getArrayOfValue();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JRadioButtonFunctionTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioButtonFunctionTwoActionPerformed
        // TODO add your handling code here:
        System.out.println("Radio button two");
    }//GEN-LAST:event_JRadioButtonFunctionTwoActionPerformed

    private void B_ValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_ValueActionPerformed

    private void Start_ChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start_ChartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Start_ChartActionPerformed

    private void End_ChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_End_ChartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_End_ChartActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        plotPanel.clear();
        plotPanel.repaint();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void saveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileActionPerformed
        // TODO add your handling code here:
        BufferedImage image = (BufferedImage) plotPanel.getImage();
        Double imageNumber = Math.random() * 1000;
        try{
            ImageIO.write(image, "jpg", new File("funkcja" + imageNumber.intValue() + ".jpg"));
            System.out.println("Zapis");
        } catch (Exception e){
            e.printStackTrace();
        }
        String filename = "obraz.txt";
        String name = "";
        String formula = "";
        if(function.isSelected(JRadioButtonFunctionOne.getModel())){
            name = "Funkcja Liniowa";
            formula = "ax + b";
        } else if(function.isSelected(JRadioButtonFunctionTwo.getModel())) {
            name = "Funkcja Kwadratowa";
            formula = "a^2 + bx + c";
        } else if(function.isSelected(jRadioButtonFunctionThree.getModel())) {
            name = "Funkcja Trygonometryczna";
            formula = "a * sin(bx + c)";
        } else if(function.isSelected(jRadioButtonFunctionFour.getModel())) {
            name = "Funkcja Logarytmiczna";
            formula = "alog(bx + c)";
        } else if(function.isSelected(jRadioButtonFunctionFive.getModel())) {
            name = "Funkcja Wykładnicza";
            formula = "aexp(bx + c)";
        }
        saveToFile(name, formula, A_Value.getText(), B_Value.getText(), C_Value.getText(), imageNumber.intValue());
        
    }//GEN-LAST:event_saveToFileActionPerformed

    public void saveToFile(String nazwa, String wzor, String a, String b, String c, int fileNumber) {
        try {
            FileWriter fileWriter = new FileWriter("funkcja" + fileNumber + ".txt", true);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            bufferedWriter.write("Nazwa: " +nazwa + "\nWzór: " + wzor + "\nA: " + a + "\nB: " + b + "\nC: " + c);
            bufferedWriter.newLine();
            bufferedWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private void JRadioButtonFunctionOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioButtonFunctionOneActionPerformed
        // TODO add your handling code here:
        System.out.println("Radio button one");
    }//GEN-LAST:event_JRadioButtonFunctionOneActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "1)Wyberz interesujący cię typ funkcji" + "\n2)Uzupełnij A, B oraz C. Zostaną one podstawione do wzoru" + "\n3)Uzupełnij zakres widoczny na wykresie. Przdstawia on wycinek całości." + "\n4)Możesz modyfikowac kolor wykresu klikając na niego prawym przyciskiem." + "\n5)Kliknij przycisk Rysuj aby stworzyć wykres" + "\n6)Możesz nakładać kilka wykresów na siebie, jeśli chcesz tego uniknąć naciśnij przycisk Wyczyść" + "\n7)Informacje są zapisywane w folderze źródłowym, moższ je podglądać w eksploratorze plików twojego systemu");
        
    }//GEN-LAST:event_HelpActionPerformed

    private void ChartColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChartColorActionPerformed
        // TODO add your handling code here:
        Color color = plotPanel.getColor();
        Color black = Color.BLACK;
        Color blue = Color.BLUE;
        Color yellow = Color.YELLOW;
        Color white = Color.WHITE;
        if(color == black){
            plotPanel.setColor(blue);
        } else if(color == blue){
            plotPanel.setColor(yellow);
        } else if(color == yellow){
            plotPanel.setColor(white);
        } else if(color == white){
            plotPanel.setColor(black);
        }
    }//GEN-LAST:event_ChartColorActionPerformed

    private void BackgroundColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackgroundColorActionPerformed
        // TODO add your handling code here:
        Color color = plotPanel.getBackground();
        Color black = Color.BLACK;
        Color blue = Color.BLUE;
        Color yellow = Color.YELLOW;
        Color white = Color.WHITE;
        if(color == black){
            System.out.println("One");
            plotPanel.setBackground(blue);
        } else if(color == blue){
            plotPanel.setBackground(yellow);
        } else if(color == yellow){
            plotPanel.setBackground(white);
        } else if(color == white){
            plotPanel.setBackground(black);
        } else {
            System.out.println("I Am in else");
            plotPanel.setBackground(Color.BLACK);
        }
        plotPanel.setOpaque(false);
    }//GEN-LAST:event_BackgroundColorActionPerformed

    public void setColor(Color color) {
        plotPanel.setColor(color);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    private NewJPanel plotPanel;
    private double AValue;
    private double BValue;
    private double CValue;
    private double DValue;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField A_Value;
    private javax.swing.JTextField B_Value;
    private javax.swing.JMenuItem BackgroundColor;
    private javax.swing.JTextField C_Value;
    private javax.swing.JMenuItem ChartColor;
    private javax.swing.JTextField End_Chart;
    private javax.swing.JButton Help;
    private javax.swing.JRadioButton JRadioButtonFunctionOne;
    private javax.swing.JRadioButton JRadioButtonFunctionTwo;
    private javax.swing.JTextField Start_Chart;
    private javax.swing.JButton clearButton;
    private javax.swing.ButtonGroup function;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JRadioButton jRadioButtonFunctionFive;
    private javax.swing.JRadioButton jRadioButtonFunctionFour;
    private javax.swing.JRadioButton jRadioButtonFunctionThree;
    private javax.swing.JButton saveToFile;
    // End of variables declaration//GEN-END:variables
}
